[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "cn-stock-holidays"
version = "2.1.0"
description = "A List of china stock exchange holidays"
readme = "README.md"
license = { text = "MIT" }
authors = [{ name = "rainx", email = "i@rainx.cc" }]
keywords = [
    "china",
    "stock",
    "holiday",
    "exchange",
    "shanghai",
    "shenzhen",
    "hongkong",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8.1"
dependencies = ["requests>=2.25.0", "click>=8.0.0"]

[project.urls]
Homepage = "https://github.com/rainx/cn_stock_holidays"
Repository = "https://github.com/rainx/cn_stock_holidays.git"
Issues = "https://github.com/rainx/cn_stock_holidays/issues"

[project.scripts]
cn-stock-holiday-sync = "cn_stock_holidays.data:sync_data"
cn-stock-holiday-sync-hk = "cn_stock_holidays.data_hk:sync_data"
get-day-list = "cn_stock_holidays.tools.cmd:main"

[tool.hatch.build.targets.wheel]
packages = ["cn_stock_holidays"]

[tool.hatch.build.targets.wheel.sources]
"cn_stock_holidays" = "cn_stock_holidays"

[tool.hatch.build.targets.wheel.include]
"cn_stock_holidays/*.txt" = "cn_stock_holidays"

# Development dependencies
[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "ipython>=8.0.0",
]

test = ["pytest>=7.0.0", "pytest-cov>=4.0.0"]

# uv specific configuration
[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "ipython>=8.0.0",
]

# Testing configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=cn_stock_holidays",
    "--cov-report=term-missing",
    "--cov-report=html",
]

# Code formatting
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["cn_stock_holidays"]

# Type checking
[tool.mypy]
python_version = "3.8.1"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false
